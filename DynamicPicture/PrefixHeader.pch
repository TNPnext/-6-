//
//  PrefixHeader.pch
//  DynamicPicture
//
//  Created by Kings Yan on 2016/12/22.
//  Copyright © 2016年 重庆瓦普时代网络科技有限公司. All rights reserved.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch

#import <WPsdInternal/WPsdInternal.h>
#import "Color+Hex.h"
#import "M_Tool.h"

#define kMainWidth [UIScreen mainScreen].bounds.size.width
#define kMainHeight [UIScreen mainScreen].bounds.size.height

#ifdef DEBUG
#define commentApi @"http://api.chzred.com"
#define userApi @"http://api.gzceub.com"
#else
#define commentApi @"http://api.chzred.com"
#define userApi @"http://api.gzceub.com"
#endif

#define userNameKey @"userName"
#define KNavBarHexColor @"D43D3D"
FOUNDATION_EXPORT NSString *DETAIL_MODIFY_NOTICE;

#define DetailNoticeTypeUserInfoKey @"DetailNoticeTypeUserInfoKey"
#define DetailNoticeModelUserInfoKey @"DetailNoticeModelUserInfoKey"

#define KloginOutKey @"loginoutKeys"

#define kTitleFontSize 19
#define kPicToolBarFontSize 12

#define isnan(x)                                                         \
( sizeof(x) == sizeof(float)  ? __inline_isnanf((float)(x))          \
: sizeof(x) == sizeof(double) ? __inline_isnand((double)(x))         \
: __inline_isnanl((long double)(x)))

//设备型号
#define IS_IPAD     [[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPad
#define IS_IPHONE   [[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone
#define IS_IPHONE_4 (fabs((double)[[UIScreen mainScreen] bounds].size.height - (double )480) < DBL_EPSILON )
#define IS_IPHONE_5 (fabs((double)[[UIScreen mainScreen] bounds].size.height - (double )568) < DBL_EPSILON )
#define IS_IPHONE_6 (fabs((double)[[UIScreen mainScreen] bounds].size.height - (double )667) < DBL_EPSILON )
#define IS_IPHONE_6_PLUS (fabs((double)[[UIScreen mainScreen] bounds].size.height - (double )960) < DBL_EPSILON )

#ifdef DEBUG
#define DLog(...) NSLog(@"%s %@",__func__,[NSString stringWithFormat:__VA_ARGS__])
#else
#define DLog(...)
#endif


/**创建单例的宏定义方法 SingletonH 在点h文件中用  SingletonM点m文件中*/
#define SingletonH(name) + (instancetype)shared##name;
#define SingletonM(name) \
static id _instance; \
\
+ (instancetype)allocWithZone:(struct _NSZone *)zone \
{ \
static dispatch_once_t onceToken; \
dispatch_once(&onceToken, ^{ \
_instance = [super allocWithZone:zone]; \
}); \
return _instance; \
} \
\
+ (instancetype)shared##name \
{ \
static dispatch_once_t onceToken; \
dispatch_once(&onceToken, ^{ \
_instance = [[self alloc] init]; \
}); \
return _instance; \
} \
\
- (id)copyWithZone:(NSZone *)zone \
{ \
return _instance; \
}\
\
- (id)mutableCopyWithZone:(NSZone *)zone { \
return _instance; \
}

#endif /* PrefixHeader_pch */
